// Code generated by MockGen. DO NOT EDIT.
// Source: internal/app/imageprocessor/imageprocessor.go

// Package mock_imageprocessor is a generated GoMock package.
package mock_imageprocessor

import (
	bytes "bytes"
	gomock "github.com/golang/mock/gomock"
	image "image"
	reflect "reflect"
)

// MockImageProcessor is a mock of ImageProcessor interface
type MockImageProcessor struct {
	ctrl     *gomock.Controller
	recorder *MockImageProcessorMockRecorder
}

// MockImageProcessorMockRecorder is the mock recorder for MockImageProcessor
type MockImageProcessorMockRecorder struct {
	mock *MockImageProcessor
}

// NewMockImageProcessor creates a new mock instance
func NewMockImageProcessor(ctrl *gomock.Controller) *MockImageProcessor {
	mock := &MockImageProcessor{ctrl: ctrl}
	mock.recorder = &MockImageProcessorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockImageProcessor) EXPECT() *MockImageProcessorMockRecorder {
	return m.recorder
}

// Hipsterize mocks base method
func (m *MockImageProcessor) Hipsterize(src image.Image, buf *bytes.Buffer) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Hipsterize", src, buf)
	ret0, _ := ret[0].(error)
	return ret0
}

// Hipsterize indicates an expected call of Hipsterize
func (mr *MockImageProcessorMockRecorder) Hipsterize(src, buf interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Hipsterize", reflect.TypeOf((*MockImageProcessor)(nil).Hipsterize), src, buf)
}
